name: CI/CD Build Workflow

on:
  push:
    branches: [master]

  pull_request:
    branches: [master]

  workflow_dispatch:

env:
  CANCEL_OTHERS: true
  PATHS_IGNORE: '["**/README.md", "**/docs/**", "**/examples/**", "**/misc/**", "**/.vscode/**"]'

jobs:
  build:
    name: Build (Python ${{ matrix.python-version }})
    runs-on: "ubuntu-latest"
    timeout-minutes: 10
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        python-version: ["3.8", "3.9"]
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: ${{ env.CANCEL_OTHERS }}
          paths_ignore: ${{ env.PATHS_IGNORE }}

      - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        uses: actions/checkout@v2

      - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        name: Cache Conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if conda-env/ci.yml has not changed in the workflow
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-${{ matrix.python-version }}-conda-${{ env.CACHE_NUMBER }}

      - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        name: Set up Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: "e3sm_to_cmip_ci"
          environment-file: conda-env/ci.yml
          channel-priority: strict
          auto-update-conda: true
          # IMPORTANT: This needs to be set for caching to work properly!
          use-only-tar-bz2: true
          python-version: ${{ matrix.python-version }}

      - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
        name: Install e3sm_to_cmip
        run: |
          python -m pip install .

      # TODO: Add test suite and enable this
      # - if: ${{ steps.skip_check.outputs.should_skip != 'true' }}
      #   name: Run Tests
      #   run: pytest

  publish-docs:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-publish-docs
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      # Using pip for Sphinx dependencies because it takes too long to reproduce a conda environment (~10 secs vs. 3-4 mins)
      # Low risk trade-off with mismatching dependencies in `dev.yml`
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx==4.4.0 sphinx_rtd_theme==1.0.0 sphinx-multiversion==0.2.4

      - name: Build Sphinx Docs
        run: |
          cd docs
          sphinx-multiversion source _build/html

      - name: Copy Docs and Commit
        run: |
          # gh-pages branch must already exist
          git clone https://github.com/E3SM-Project/e3sm_to_cmip.git --branch gh-pages --single-branch gh-pages

          # Only replace master docs with latest changes. Docs for tags should be untouched.
          cd gh-pages
          rm -r _build/html/master
          cp -r ../docs/_build/html/master _build/html/master

          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # The below command will fail if no changes were present, so we ignore it
          git add .
          git commit -m "Update documentation" -a || true

      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          branch: gh-pages
          directory: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
